{"version":3,"sources":["components/button/Button.js","components/input/Input.js","pages/Order/OrderForm/OrderFormSchema.js","components/errorMessage/ErrorMessage.js","pages/Order/OrderForm/OrderForm.js","pages/Order/OrderProducts/OrderProducts.js","pages/Order/Order.js"],"names":["ButtonControl","props","content","type","htmlType","InputControl","field","value","name","placeholder","className","setFieldValue","form","onChange","event","target","yup","require","schema","object","shape","address","string","required","phone","number","email","ErrorMessage","message","OrderForm","submitForm","initialValues","onSubmit","validationSchema","errors","values","component","Input","Button","OrderProduct","product","count","title","price","withRouter","history","dispatch","useDispatch","useSelector","state","cart","items","total","useEffect","getTotal","length","span","submitUserOrder","map","id","to","setTimeout","push"],"mappings":"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","file":"static/js/5.df766a59.chunk.js","sourcesContent":["import { Button } from \"antd\";\n\nconst ButtonControl = (props) => {\n  const { content, type } = props;\n  return (\n    <Button {...props} htmlType={type}>\n      {content}\n    </Button>\n  );\n};\n\nexport default ButtonControl;\n","import { Input } from \"antd\";\n\nexport const InputControl = (props) => {\n  const {\n    field: { value, name },\n    type,\n    placeholder,\n    className,\n    form: { setFieldValue },\n  } = props;\n  return (\n    <Input\n      name={name}\n      className={className}\n      value={value}\n      type={type}\n      placeholder={placeholder}\n      onChange={(event) => setFieldValue(name, event.target.value)}\n    />\n  );\n};\n","let yup = require('yup');\n \nexport let schema = yup.object().shape({\n  address: yup.string().required(),\n  phone: yup.number().required(),\n  email: yup.string().email().required(),\n});","import React from 'react';\nimport './ErrorMessage.scss'\nexport const ErrorMessage = ({ message }) => {\n    return (\n        <div className=\"error-message\">\n            {message}\n        </div>\n    )\n}","import React from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport { InputControl as Input } from \"../../../components/input/Input\";\nimport Button from \"../../../components/button/Button\";\nimport { schema } from \"./OrderFormSchema\";\nimport { ErrorMessage } from \"../../../components/errorMessage/ErrorMessage\";\nimport './OrderForm.scss';\nconst OrderForm = ({ submitForm }) => {\n  return (\n    <Formik\n      initialValues={{\n        address: \"\",\n        phone: \"\",\n        email: \"\",\n      }}\n      onSubmit={submitForm}\n      validationSchema={schema}\n    >\n      {({errors,  values: { phone, email, address } }) => (\n        <Form>\n          <label>Email</label>\n          <Field\n            className=\"order-input\"\n            component={Input}\n            name=\"email\"\n            type=\"text\"\n            placeholder=\"Your Email\"\n            value={email}\n          />\n          <ErrorMessage message={errors.email} />\n          <br />\n          <label>Phone</label>\n          <Field\n            className=\"order-input\"\n            component={Input}\n            name=\"phone\"\n            type=\"text\"\n            placeholder=\"Your Phone\"\n            value={phone}\n          />\n          <ErrorMessage message={errors.phone} />\n          <br />\n          <label>Address</label>\n          <Field\n            className=\"order-input\"\n            component={Input}\n            name=\"address\"\n            type=\"text\"\n            placeholder=\"Your Address\"\n            value={address}\n          />\n          <ErrorMessage message={errors.address} />\n          <Button content=\"Order Now\" type=\"submit\" />\n        </Form>\n      )}\n    </Formik>\n  );\n};\nexport default OrderForm;\n","import React, { Component, useEffect } from \"react\";\nimport './OrderProducts.scss'\nexport const OrderProduct = ({ product }) => {\n  const { count, title, price } = product;\n  return (\n    <div className=\"order-product\">\n      <p><strong>name: </strong> {title}</p>\n      <p><strong>Quantity:</strong> {count}</p>\n      <p><strong>price Per Item:</strong> {price}</p>\n    </div>\n  );\n};\n","import React, { useEffect, Fragment } from \"react\";\nimport OrderForm from \"./OrderForm/OrderForm\";\nimport { OrderProduct } from \"./OrderProducts/OrderProducts\";\nimport { Row, Col } from \"antd\";\nimport { submitUserOrder, getTotal } from \"../../store/Cart/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport './Order.scss'\nconst Order = ({ history }) => {\n  const dispatch = useDispatch();\n  const { items, total } = useSelector((state) => state.cart);\n\n  useEffect(()=> {\n   dispatch(getTotal())\n })\n\n\n  const submitForm = (values) => {\n    dispatch(submitUserOrder(values));\n  };\n\n  const redirectToMainPage= () => {\n    setTimeout(()=>{history.push('/products');}, 3000);\n  }\n\n  return (\n    <Row>\n      {items.length > 0 ? (\n        <Fragment>\n          <Col className=\"order-now\" span={10}>\n          <h3 className=\"mt-2\">Order Now</h3>\n            <OrderForm submitForm={submitForm} />\n          </Col>\n          <Col span={10} className=\"order-products\">\n            <h3 className=\"mt-2\">Products</h3>\n            {items.map((product, id) => (\n              <OrderProduct key={id} product={product} />))}\n              <strong>Total: {total}</strong>\n          </Col>\n        </Fragment>\n      ) : (\n        <div >\n         <h3 className=\"text-center mt-2\">Your Request Submitted,\n          Back to Shopping Again!\n          <Link to=\"/products\">Products</Link> </h3>\n          {redirectToMainPage()}\n        </div>\n      )}\n    </Row>\n  );\n};\n\nexport default withRouter(Order);\n"],"sourceRoot":""}