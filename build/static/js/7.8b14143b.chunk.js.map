{"version":3,"sources":["components/button/Button.js","components/productCard/ProductCard.js","pages/ProductList/ProductList.js"],"names":["ButtonControl","props","content","type","htmlType","ProductCard","product","addToCart","isDisabled","useSelector","state","cart","items","filter","item","id","length","price","image","category","title","cover","to","className","src","alt","bordered","style","width","Button","disabled","onClick","ProductList","disable","addItem","this","getProducts","products","map","React","Component","connect","data","dispatch","allProductsRequest","addItemToCart"],"mappings":"iJAWeA,IATO,SAACC,GAAW,IACxBC,EAAkBD,EAAlBC,QAASC,EAASF,EAATE,KACjB,OACE,cAAC,IAAD,2BAAYF,GAAZ,IAAmBG,SAAUD,EAA7B,SACGD,O,wKCiCQG,EAjCK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAExBC,EADYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAArCC,MACiBC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,IAAMT,EAAQS,MAAIC,OAAS,EAChEC,EAAsCX,EAAtCW,MAAOC,EAA+BZ,EAA/BY,MAAOC,EAAwBb,EAAxBa,SAAUC,EAAcd,EAAdc,MAAOL,EAAOT,EAAPS,GACvC,OACI,eAAC,IAAD,CACEM,MACE,cAAC,IAAD,CAAMC,GAAE,oBAAeP,GAAMQ,UAAU,gBAAvC,SACE,qBAAKC,IAAKN,EAAOO,IAAI,oBAGzBC,UAAU,EACVC,MAAO,CAAEC,MAAO,KAPlB,UASE,8BACE,4CADF,IAC2BR,KAE3B,8BACE,gDADF,IAC+BD,KAE/B,8BACE,6CACCF,KAEH,cAACY,EAAA,EAAD,CACE3B,QAAS,cACTC,KAAK,SACL2B,SAAUtB,EACVuB,QAASxB,Q,gBC3BbyB,E,4MACJtB,MAAQ,CACNuB,SAAS,G,EAEX1B,UAAY,SAACO,GACX,EAAKb,MAAMiC,QAAQpB,I,kEAKnBqB,KAAKlC,MAAMmC,gB,+BAEH,IAAD,SACsBD,KAAKlC,MAAlBoC,GADT,EACCzB,MADD,EACSyB,UAChB,OACE,qBAAKd,UAAU,yBAAf,SACIc,GACA,qBAAKd,UAAU,wBAAf,SACGc,EAASC,KAAI,SAACxB,EAAMC,GAAP,OACZ,cAAC,EAAD,CACER,UAAW,kBAAM,EAAKA,UAAUO,IAEhCR,QAASQ,GAHX,UAEUC,EAFV,mB,GAnBYwB,IAAMC,WAuCjBC,uBARQ,SAAC/B,GAAD,MAAY,CACjC2B,SAAU3B,EAAM2B,SAASK,KACzB9B,MAAOF,EAAMC,KAAKC,UAEO,SAAC+B,GAAD,MAAe,CAC1CP,YAAa,kBAAMO,EAASC,gBAC5BV,QAAS,SAACpB,GAAD,OAAU6B,EAASE,YAAc/B,QAE3B2B,CAA6CT","file":"static/js/7.8b14143b.chunk.js","sourcesContent":["import { Button } from \"antd\";\n\nconst ButtonControl = (props) => {\n  const { content, type } = props;\n  return (\n    <Button {...props} htmlType={type}>\n      {content}\n    </Button>\n  );\n};\n\nexport default ButtonControl;\n","import React, { useState } from \"react\";\nimport Button from \"../button/Button\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"antd\";\nimport \"./ProductCard.scss\";\nimport { useSelector } from \"react-redux\";\nconst ProductCard = ({ product, addToCart }) => {\n  const { items } = useSelector(state => state.cart);\n  const isDisabled = items.filter(item => item.id == product.id).length > 0;\n  const { price, image, category, title, id } = product;\n  return (\n      <Card\n        cover={\n          <Link to={`/products/${id}`} className=\"product-image\">\n            <img src={image} alt=\"product-image\" />\n          </Link>\n        }\n        bordered={true}\n        style={{ width: 300 }}\n      >\n        <p>\n          <strong>Name: </strong> {title}\n        </p>\n        <p>\n          <strong>Category: </strong> {category}\n        </p>\n        <p>\n          <strong>Price: </strong>\n          {price}\n        </p>\n        <Button\n          content={\"Add To Cart\"}\n          type=\"button\"\n          disabled={isDisabled}\n          onClick={addToCart}\n        />\n      </Card>\n  );\n};\nexport default ProductCard;\n","import React from \"react\";\n\nimport ProductCard from \"../../components/productCard/ProductCard\";\nimport { allProductsRequest } from \"../../store/Product/actions\";\nimport { addItemToCart } from \"../../store/Cart/actions\";\nimport { connect } from \"react-redux\";\n\nclass ProductList extends React.Component {\n  state = {\n    disable: false,\n  };\n  addToCart = (item) => {\n    this.props.addItem(item);\n  };\n\n\n  componentDidMount() {\n    this.props.getProducts();\n  }\n  render() {\n    const { items , products } = this.props;\n    return (\n      <div className=\"product-list-container\">\n        { products && (\n          <div className=\"mt-2 d-flex flex-wrap\">\n            {products.map((item, id) => (\n              <ProductCard\n                addToCart={() => this.addToCart(item)}\n                key={`${id}-id`}\n                product={item}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps= (state) => ({\n  products: state.products.data,\n  items: state.cart.items\n})\nconst mapDispatchToProps = (dispatch) => ({\ngetProducts: () => dispatch(allProductsRequest()),\naddItem: (item) => dispatch(addItemToCart(item))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);\n"],"sourceRoot":""}