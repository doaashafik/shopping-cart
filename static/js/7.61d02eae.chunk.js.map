{"version":3,"sources":["store/Cart/actions.js","components/input/Input.js","components/button/Button.js","components/orderForm/OrderFormSchema.js","components/errorMessage/ErrorMessage.js","components/orderForm/OrderForm.js","components/orderProducts/OrderProducts.js","pages/Order/Order.js"],"names":["addItemToCart","payload","type","types","deleteCartItem","IncreaseCartItem","DecreaseCartItem","submitUserOrder","getTotal","InputControl","props","name","field","placeholder","className","value","setFieldValue","form","onChange","event","target","ButtonControl","content","htmlType","yup","require","schema","object","shape","address","string","required","phone","number","email","ErrorMessage","message","OrderForm","submitForm","initialValues","onSubmit","validationSchema","errors","values","component","Input","Button","OrderProduct","product","count","title","price","withRouter","history","dispatch","useDispatch","useSelector","state","cart","items","total","useEffect","length","span","map","id","href","setTimeout","push"],"mappings":"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","file":"static/js/7.61d02eae.chunk.js","sourcesContent":["import * as types from \"./types\";\n\nexport const addItemToCart = (payload) => ({\n  type: types.ADD_TO_CART,\n  payload,\n});\nexport const deleteCartItem = (payload) => ({\n  type: types.DELETE_ITEM,\n  payload,\n});\n\nexport const IncreaseCartItem = (payload) => ({\n  type: types.INCREASE_CART_ITEM,\n  payload,\n});\nexport const DecreaseCartItem = (payload) => ({\n  type: types.DECREASE_CART_ITEM,\n  payload,\n});\nexport const submitUserOrder = (payload) => ({\n  type: types.SUBMIT_ORDER,\n  payload\n});\n\nexport const getTotal = () => ({\n  type: types.TOTAL_PRICE\n});\n","import { Input } from \"antd\";\n\nexport const InputControl = (props) => {\n  const {\n    field: { name },\n    type,\n    placeholder,\n    className,\n    value,\n    form: { setFieldValue },\n  } = props;\n  return (\n    <Input\n      name={name}\n      className={className}\n      value={value}\n      type={type}\n      placeholder={placeholder}\n      onChange={(event) => setFieldValue(name, event.target.value)}\n    />\n  );\n};\n","import { Button } from \"antd\";\n\nconst ButtonControl = (props) => {\n  const { content, type } = props;\n  return (\n    <Button {...props} htmlType={type}>\n      {content}\n    </Button>\n  );\n};\n\nexport default ButtonControl;\n","let yup = require('yup');\n \nexport let schema = yup.object().shape({\n  address: yup.string().required(),\n  phone: yup.number().required(),\n  email: yup.string().email().required(),\n});","import React from 'react';\nimport './ErrorMessage.scss'\nexport const ErrorMessage = ({ message }) => {\n    return (\n        <div className=\"error-message\">\n            {message}\n        </div>\n    )\n}","import React from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport { InputControl as Input } from \"../input/Input\";\nimport Button from \"../button/Button\";\nimport { schema } from \"./OrderFormSchema\";\nimport { ErrorMessage } from \"../errorMessage/ErrorMessage\";\nimport './OrderForm.scss';\nconst OrderForm = ({ submitForm }) => {\n  return (\n    <Formik\n      initialValues={{\n        address: \"\",\n        phone: \"\",\n        email: \"\",\n      }}\n      onSubmit={submitForm}\n      validationSchema={schema}\n    >\n      {({errors,  values: { phone, email, address } }) => (\n        <Form>\n          <label>Email</label>\n          <Field\n            className=\"order-input\"\n            component={Input}\n            name=\"email\"\n            type=\"text\"\n            placeholder=\"Your Email\"\n            value={email}\n          />\n          <ErrorMessage message={errors.email} />\n          <br />\n          <label>Phone</label>\n          <Field\n            className=\"order-input\"\n            component={Input}\n            name=\"phone\"\n            type=\"text\"\n            placeholder=\"Your Phone\"\n            value={phone}\n          />\n          <ErrorMessage message={errors.phone} />\n          <br />\n          <label>Address</label>\n          <Field\n            className=\"order-input\"\n            component={Input}\n            name=\"address\"\n            type=\"text\"\n            placeholder=\"Your Address\"\n            value={address}\n          />\n          <ErrorMessage message={errors.address} />\n          <Button content=\"Order Now\" type=\"submit\" />\n        </Form>\n      )}\n    </Formik>\n  );\n};\nexport default OrderForm;\n","import React, { Component, useEffect } from \"react\";\nimport './OrderProducts.scss'\nexport const OrderProduct = ({ product }) => {\n  const { count, title, price } = product;\n  return (\n    <div className=\"order-product\">\n      <p><strong>name: </strong> {title}</p>\n      <p><strong>Quantity:</strong> {count}</p>\n      <p><strong>price Per Item:</strong> {price}</p>\n    </div>\n  );\n};\n","import React, { useEffect, Fragment } from \"react\";\nimport OrderForm from \"../../components/orderForm/OrderForm\";\nimport { OrderProduct } from \"../../components/orderProducts/OrderProducts\";\nimport { Row, Col } from \"antd\";\nimport { submitUserOrder, getTotal } from \"../../store/Cart/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport './Order.scss'\nconst Order = ({ history }) => {\n  const dispatch = useDispatch();\n  const { items, total } = useSelector((state) => state.cart);\n\n  useEffect(()=> {\n   dispatch(getTotal())\n },[total])\n\n\n  const submitForm = (values) => {\n    dispatch(submitUserOrder(values));\n  };\n\n  const redirectToMainPage= () => {\n    setTimeout(()=>{history.push('/products');}, 3000);\n  }\n\n  return (\n    <Row>\n      {items.length > 0 ? (\n        <Fragment>\n          <Col className=\"order-now\" span={10}>\n            <h3 className=\"mt-2\">Order Now</h3>\n            <OrderForm submitForm={submitForm} />\n          </Col>\n          <Col span={10} className=\"order-products\">\n              <h3 className=\"mt-2\">Products</h3>\n            {items.map((product, id) => (\n              <OrderProduct key={id} product={product} />))}\n              <strong>Total: {total}</strong>\n          </Col>\n        </Fragment>\n      ) : (\n        <Col className=\"mt-2 submit-message\" span={10} >\n          <h3 className=\"\">Ok it's Done!,Back to Shopping Again!\n          {\" \"} {\" \"}\n          <a href=\"/shopping-cart/#/products\">Products</a> </h3> \n          {redirectToMainPage()}\n        </Col>\n      )}\n    </Row>\n  );\n};\n\nexport default withRouter(Order);\n"],"sourceRoot":""}