{"version":3,"sources":["network/apis/index.js","network/apis/Requests/Product.js","store/Loading/types.js","routes/history.js","components/loading/Loading.js","routes/PrivateRoute.js","utils/LazyLoad.js","routes/routes.js","components/header/HeaderCart/HeaderCartProducts/HeaderCartProducts.js","components/header/HeaderCart/HeaderCart.js","components/header/HeaderProfile/HeaderProfile.js","components/header/Header.js","components/template/Template.js","pages/App.js","index.js","store/Cart/types.js","store/Product/types.js","store/Cart/actions.js","store/Product/reducer.js","store/Loading/reducer.js","store/Cart/reducerUtils.js","store/Cart/reducer.js","store/rootReducer.js","store/Product/sagas.js","store/rootSaga.js","store/index.js","store/Product/actions.js"],"names":["Instance","axios","create","baseURL","process","interceptors","response","use","error","request","allProductsRequest","a","get","productDetailsRequest","id","IS_LOADING","browserHistory","createBrowserHistory","Loading","className","LoadingOutlined","PrivateRoute","Component","component","rest","render","props","ProductList","React","lazy","ProductDetail","Order","Routes","basename","history","fallback","exact","path","from","to","HeaderCartProducts","dispatch","useDispatch","items","useSelector","state","cart","length","map","title","count","type","onClick","deleteCartItem","DeleteOutlined","IncreaseCartItem","PlusSquareOutlined","DecreaseCartItem","MinusSquareOutlined","href","CartDropdownMenu","useState","visible","setVisible","CartMenu","e","key","Item","onVisibleChange","flag","overlay","style","border","padding","ShoppingCartOutlined","fontSize","verticalAlign","ProfileMenu","ProfileDropdownMenu","UserOutlined","Header","backIcon","subTitle","HeaderCart","extra","HeaderProfile","Template","loading","isLoading","children","App","ReactDOM","store","persistor","document","getElementById","ADD_TO_CART","INCREASE_CART_ITEM","DECREASE_CART_ITEM","DELETE_ITEM","TOTAL_PRICE","SUBMIT_ORDER","ALL_PRODUCTS","ALL_PRODUCTS_RECIEVE","ERROR_REQUESTS","addItemToCart","payload","types","submitUserOrder","getTotal","INIT_STATE","require","plusItem","item","minusItem","totalPricePerItem","total","price","combineReducers","products","action","actions","data","filter","itemsAfterTotal","reduce","b","order","handleAllProducts","ProductSagaWatch","query","call","result","put","allProductsRecieved","allProductsError","takeEvery","rootSaga","all","persistConfig","storage","whiteList","blacklist","persistedReducer","persistReducer","RootReducer","saga","createSagaMiddleware","composedEnhancer","composeWithDevTools","applyMiddleware","createStore","persistStore","run"],"mappings":"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","file":"static/js/main.94537dc5.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { SuccessHandler,RequestHandler, ErrorHandler } from \"../Interceptors\";\nexport const Instance = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n});\nInstance.interceptors.response.use(\n  (response) => SuccessHandler(response),\n  (error) => ErrorHandler(error)\n);\nInstance.interceptors.request.use(\n  (request) => RequestHandler(request),\n);\n","import { Instance } from '../index'\nexport const allProductsRequest = async () => Instance.get('/products');\nexport const productDetailsRequest = async (id) => Instance.get(`/products/${id}`);\n","export const IS_LOADING = 'IS_LOADING';\n","import { createBrowserHistory } from \"history\";\n\nexport const browserHistory = createBrowserHistory();","import React from \"react\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport './Loading.scss'\nconst Loading = () => {\n  return (\n    <div className=\"loading-content\">\n      <div className=\"loading-icon\">\n        <LoadingOutlined />\n      </div>\n    </div>\n  );\n};\nexport default Loading;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nconst authedUsr = true;\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n       return authedUsr ? <Component {...props} /> : <Redirect to=\"/\" />;\n      }}\n    />\n  );\n};\nexport default PrivateRoute;\n","import React from 'react';\nexport const ProductList = React.lazy(() => import(\"../pages/ProductList/ProductList\"));\nexport const ProductDetail = React.lazy(() => import(\"../pages/ProductDetail/ProductDetail\"));\nexport const Order = React.lazy(() => import(\"../pages/Order/Order\"));\n","import React, { Suspense } from \"react\";\nimport {  HashRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport { browserHistory } from \"./history\";\nimport Loading from \"../components/loading/Loading\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport { ProductDetail, ProductList, Order } from '../utils/LazyLoad'\n\nexport default function Routes() {\n  return (\n    <Router basename=\"/\" history={browserHistory}>\n      <Suspense fallback={<Loading />}>\n        <Switch>\n          <PrivateRoute exact  path=\"/products\" component={ProductList} />\n          <PrivateRoute exact path=\"/products/:id\" component={ProductDetail} />\n          <PrivateRoute exact path=\"/order\" component={Order} />\n          <Redirect from=\"/\" to=\"/products\" />\n        </Switch>\n      </Suspense>\n    </Router>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  MinusSquareOutlined,\n  PlusSquareOutlined,\n  DeleteOutlined,\n} from \"@ant-design/icons\";\nimport {\n  deleteCartItem,\n  IncreaseCartItem,\n  DecreaseCartItem,\n} from \"../../../../store/Cart/actions\";\n\nexport const HeaderCartProducts = () => {\n  const dispatch = useDispatch();\n  const { items } = useSelector((state) => state.cart);\n  return (\n    <>\n      {items.length > 0 ? (\n        <Fragment>\n          {items.map(({ title, id, count }) => (\n            <div key={id} className=\"cart-product\">\n              <span>\n                <strong>Name</strong> {title} <strong>Count</strong> {count}\n              </span>{\" \"}\n              <Button\n                type=\"button\"\n                onClick={() => dispatch(deleteCartItem(id))}\n              >\n                <DeleteOutlined />\n              </Button>{\" \"}\n              <Button\n                type=\"button\"\n                onClick={() => dispatch(IncreaseCartItem(id))}\n              >\n                <PlusSquareOutlined />\n              </Button>{\" \"}\n              <Button\n                type=\"button\"\n                onClick={() => dispatch(DecreaseCartItem(id))}\n              >\n                <MinusSquareOutlined />\n              </Button>{\" \"}\n            </div>\n          ))}\n          <a href={\"/shopping-cart/#/order\"} className=\"order-review\">\n            Review Order\n          </a>\n        </Fragment>\n      ) : (\n        <strong>Start Shopping Now!</strong>\n      )}\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Dropdown, Menu, Button } from \"antd\";\nimport { ShoppingCartOutlined } from \"@ant-design/icons\";\nimport { HeaderCartProducts } from \"./HeaderCartProducts/HeaderCartProducts\";\n\nconst CartDropdownMenu = () => {\n  const [visible, setVisible] = useState(false);\n\n  const handleMenuClick = (e) => {\n    if (e.key === \"3\") {\n      setVisible(false);\n    }\n  };\n\n  const handleVisibleChange = (flag) => setVisible(flag);\n\n  const CartMenu = (\n    <Menu onClick={handleMenuClick}>\n      <Menu.Item>\n        <HeaderCartProducts />\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Dropdown\n      onVisibleChange={handleVisibleChange}\n      key=\"more\"\n      visible={visible}\n      overlay={CartMenu}\n    >\n      <Button\n        style={{\n          border: \"none\",\n          padding: 0,\n        }}\n      >\n        <ShoppingCartOutlined\n          style={{\n            fontSize: 20,\n            verticalAlign: \"top\",\n          }}\n        />\n      </Button>\n    </Dropdown>\n  );\n};\nexport default CartDropdownMenu;\n","import { Menu } from \"antd\";\nimport React from \"react\";\nimport { Dropdown, Button } from \"antd\";\nimport {UserOutlined   } from \"@ant-design/icons\";\nconst ProfileMenu = (\n    <Menu>\n      <Menu.Item>\n        <a href=\"/profile\">Profile</a>\n        <a href=\"/sign-out\">SignOut</a>\n      </Menu.Item>\n    </Menu>\n  );\nconst ProfileDropdownMenu = () => {\n  return (\n    <Dropdown key=\"more\" overlay={ProfileMenu}>\n      <Button\n        style={{\n          border: \"none\",\n          padding: 0,\n        }}\n      >\n        <UserOutlined  \n          style={{\n            fontSize: 20,\n            verticalAlign: \"top\",\n          }}\n        />\n      </Button>\n    </Dropdown>\n  );\n};\nexport default ProfileDropdownMenu;\n","import React from \"react\";\nimport { PageHeader } from \"antd\";\nimport \"./Header.scss\";\nimport HeaderCart from \"./HeaderCart/HeaderCart\";\nimport HeaderProfile from \"./HeaderProfile/HeaderProfile\";\n\nconst Header = () => {\n  return (\n    <PageHeader\n      className=\"site-page-header\"\n      backIcon={false}\n      subTitle=\"Products Shopping Cart\"\n      title={<HeaderCart />}\n      extra={[<HeaderProfile key=\"more\" />]}\n    />\n  );\n};\nexport default Header;\n","import React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"../loading/Loading\";\nimport Header from '../header/Header'\nconst Template = (props) => {\n  const loading = useSelector((state) => state.isLoading);\n  return (\n    <Fragment>\n      {loading && <Loading />}\n      <Header />\n      {props.children}\n    </Fragment>\n  );\n};\n\nexport default Template;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Routes from \"../routes/routes\";\nimport Template from \"../components/template/Template\";\nfunction App() {\n  return (\n    <Template>\n      <Routes />\n    </Template>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./pages/App\";\nimport { Provider } from \"react-redux\";\nimport store, { persistor } from \"./store\";\nimport Loading from \"./components/loading/Loading\";\nimport { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<Loading />} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export const ADD_TO_CART = 'ADD_TO_CART';\nexport const INCREASE_CART_ITEM = 'INCREASE_CART_ITEM';\nexport const DECREASE_CART_ITEM = 'DECREASE_CART_ITEM';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const TOTAL_PRICE = 'TOTAL_PRICE';\nexport const SUBMIT_ORDER = 'SUBMIT_ORDER';\n\n","export const ALL_PRODUCTS = 'ALL_PRODUCTS';\nexport const ALL_PRODUCTS_RECIEVE = 'ALL_PRODUCTS_RECIEVE';\n\nexport const ERROR_REQUESTS = 'ERROR_REQUESTS';\nexport const SUCCESS_REQUESTS = 'SUCCESS_REQUESTS';\n\n","import * as types from \"./types\";\n\nexport const addItemToCart = (payload) => ({\n  type: types.ADD_TO_CART,\n  payload,\n});\nexport const deleteCartItem = (payload) => ({\n  type: types.DELETE_ITEM,\n  payload,\n});\n\nexport const IncreaseCartItem = (payload) => ({\n  type: types.INCREASE_CART_ITEM,\n  payload,\n});\nexport const DecreaseCartItem = (payload) => ({\n  type: types.DECREASE_CART_ITEM,\n  payload,\n});\nexport const submitUserOrder = (payload) => ({\n  type: types.SUBMIT_ORDER,\n  payload\n});\n\nexport const getTotal = () => ({\n  type: types.TOTAL_PRICE\n});\n","import * as actions from \"./types\";\n\nconst INIT_STATE = {};\n\nexport const productReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case actions.ALL_PRODUCTS_RECIEVE:\n      return (state = { ...state, data: action.payload });\n    case actions.ERROR_REQUESTS:\n      return { ...state, error: true };\n    default:\n      return state;\n  }\n};\n","const { IS_LOADING } = require(\"./types\");\n\nconst INIT_STATE =  false;\n\nexport const loadingReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case IS_LOADING:\n      return state =  action.payload\n    default:\n      return state;\n  }\n};\n","export const plusItem = (item) => {\n  item.count++;\n  return item;\n};\n\nexport const minusItem = (item) => {\n  item.count = item.count == 1 ? 1 : item.count - 1;\n  return item;\n};\nexport const totalPricePerItem = (item) => {\n  item.total = item.count * item.price;\n  return item;\n};\n","import * as actions from \"./types\";\nimport { totalPricePerItem, minusItem, plusItem } from \"./reducerUtils\";\nconst INIT_STATE = { items: [] };\n\nexport const cartReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case actions.ADD_TO_CART:\n      const item = { ...action.payload, count: 1 };\n      return { ...state, items: [...state.items, item] };\n\n    case actions.DELETE_ITEM:\n      return {\n        items: state.items.filter((item) => item.id !== action.payload),\n      };\n\n    case actions.DECREASE_CART_ITEM:\n      return {\n        items: state.items.map((item) => {\n          if (item.id == action.payload) minusItem(item);\n          return item;\n        }),\n      };\n\n    case actions.INCREASE_CART_ITEM:\n      return {\n        items: state.items.map((item) => {\n          if (item.id == action.payload) plusItem(item);\n          return item;\n        }),\n      };\n\n    case actions.TOTAL_PRICE:\n      const items = state.items.map(totalPricePerItem);\n      const itemsAfterTotal = items.map((item) => item.total);\n      const total = itemsAfterTotal.length > 0 ? itemsAfterTotal.reduce((a, b) => a + b) : 0\n      return { items, total };\n\n    case actions.SUBMIT_ORDER:\n      return { items: [], order: action.payload };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux'\nimport { productReducer } from './Product/reducer';\nimport { loadingReducer } from './Loading/reducer'\nimport { cartReducer } from './Cart/reducer';\nexport default combineReducers({\n    products: productReducer,\n    isLoading: loadingReducer,\n    cart: cartReducer\n})","import { put, takeEvery, call } from \"redux-saga/effects\";\nimport {  ALL_PRODUCTS } from \"./types\";\nimport { allProductsRequest } from \"../../network/apis/Requests/Product\";\nimport { allProductsRecieved, allProductsError } from \"./actions\";\n\nfunction* handleAllProducts(query) {\n  try {\n    const result = yield call(allProductsRequest, query.payload);\n    yield put(allProductsRecieved(result.data));\n  }\n  catch {\n    yield put(allProductsError());\n  }  \n}\nexport function* ProductSagaWatch() {\n  yield takeEvery(ALL_PRODUCTS, handleAllProducts);\n}\n","import { all } from 'redux-saga/effects'\nimport { ProductSagaWatch } from './Product/sagas'\n\nexport default function* rootSaga() {\n    yield all([\n      ProductSagaWatch(),\n    ])\n  }","import { createStore,  applyMiddleware } from \"redux\";\nimport RootReducer from \"./rootReducer\";\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from \"./rootSaga\";\nimport storage from 'redux-persist/lib/storage';\nimport { persistStore, persistReducer } from 'redux-persist';\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whiteList: ['products', 'cart'],\n    blacklist: ['isLoading']\n  }\n  \nconst persistedReducer = persistReducer(persistConfig, RootReducer)\n  \n\nconst saga = createSagaMiddleware();\nconst composedEnhancer = composeWithDevTools(applyMiddleware(saga));\n\nconst store = createStore(persistedReducer, composedEnhancer);\nexport const persistor = persistStore(store);\nsaga.run(rootSaga);\nexport default store;","import { ALL_PRODUCTS,ERROR_REQUESTS, ALL_PRODUCTS_RECIEVE } from \"./types\";\n\nexport const allProductsRequest = (payload) => ({\n  type: ALL_PRODUCTS,\n  payload,\n});\nexport const allProductsRecieved = (payload) => ({\n  type: ALL_PRODUCTS_RECIEVE,\n  payload,\n});\n\nexport const allProductsError = () => ({\n  type: ERROR_REQUESTS\n});\n"],"sourceRoot":""}